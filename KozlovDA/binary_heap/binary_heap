#include <iostream>
#include <algorithm>
#include <cmath>

void buildBinaryHeap(int* const array, int number_of_elements)
{
    for (int heap_height = 0; heap_height < log2(number_of_elements); heap_height++)
    {
        for (int root_nood = 0; root_nood < log2(number_of_elements) + 1; root_nood++)
        {
            int left = 2 * root_nood + 1;
            int right = 2 * root_nood + 2;
            int max = std::max(array[left], array[right]);
            if (array[root_nood] < max && max == array[left])
                std::swap(array[root_nood], array[left]);
            else if (array[root_nood] < max && max == array[right])
                std::swap(array[root_nood], array[right]);
        }
    }
}

int main()
{
    int array[10]{ 72, 2, 1, 7, 9, 3, 4, 6 , 23, 5};
    buildBinaryHeap(array, 10);
}
